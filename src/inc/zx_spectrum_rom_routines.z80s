; ZX Spectrum ROM routines

; By Marcos Cruz (programandala.net)

; 2014-12-17: Start. Regulary improved afterwards.
; 2015-05-24: Changes to make the file usable as symbols input
; file by z80dasm.
; 2015-08-20: Added new routines.
; 2015-09-06: Added new routines.
; 2016-04-16: Added new routines.

rom_add_char:       equ 0x0F81
rom_alpha:          equ 0x2C8D
rom_beep:           equ 0x03F8
rom_beeper:         equ 0x03B5
rom_border:         equ 0x2294
rom_border_2297:    equ 0x2297 ; secondary entry to rom_border
rom_border_229b:    equ 0x229B ; secondary entry to rom_border
rom_break_key:      equ 0x1F54 ; return the carry flag reset if SHIFT and BREAK keys are both being pressed.
rom_call_jump:      equ 0x229B ; JP (HL)
rom_chan_open:      equ 0x1601 ; open a channel (channel in A)
rom_chan_s:         equ 0x1642 ; set flags for upper screen channel
rom_circle:         equ 0x2320
rom_cl_addr:        equ 0x0E9B
rom_cl_all:         equ 0x0DAF ; clearing whole (upper) display area
rom_cl_sc_all:      equ 0x0DFE
rom_cl_scroll:      equ 0x0E00 ; scroll the number of lines in the B register
rom_clear_run:      equ 0x1EAF
rom_cls:            equ 0x0D6B ; CLS
rom_cls_lower:      equ 0x0D6E
rom_co_temp_5:      equ 0x2211
rom_copy:           equ 0x0EAC
rom_copy_line:      equ 0x0EF4
rom_differ:         equ 0x19DD
rom_draw:           equ 0x24BA ; point of the draw_line routine
rom_draw_line:      equ 0x24B7
rom_ed_copy:        equ 0x111D
rom_ed_delete:      equ 0x1015
rom_ed_enter:       equ 0x1024
rom_ed_error:       equ 0x107F
rom_ed_left:        equ 0x1007
rom_ed_right:       equ 0x100C
rom_find_int1:      equ 0x1E94
rom_fp_to_a:        equ 0x2DD5
rom_fp_to_bc:       equ 0x2DA2
rom_go_to:          equ 0x1E67
rom_go_to_bc:       equ 0x1E6A ; 'GO TO' line in BC register
rom_go_to_hl:       equ 0x1E6C ; 'GO TO' line in HL register XXX not tested
rom_hl_by_de_to_hl: equ 0x30A9 ; HL=HL*DE
rom_hlxde:          equ 0x30A9 ; HL=HL*DE
rom_key_decode:     equ 0x0333
rom_key_input:      equ 0x10A8
rom_key_scan:       equ 0x028E
rom_key_test:       equ 0x031E
rom_keyboard:       equ 0x02BF
rom_ld_bytes:       equ 0x0556
rom_main_4:         equ 0x1303
rom_main_exec:      equ 0x12A2
rom_main_g:         equ 0x1313 ; runtime error (error in A)
rom_no_reset:       equ 0x0070
rom_one_space:      equ 0x1652
rom_out_code:       equ 0x15EF
rom_out_curs:       equ 0x18E1
rom_perm:           equ 0x1C96
rom_pixel_add:      equ 0x22AA
rom_plot:           equ 0x22DC
rom_plot_22df:      equ 0x22DF ; secondary entry to PLOT
rom_plot_sub:       equ 0x22E5 ; the plot subroutine (coords in BC)
rom_po_able:        equ 0x0AD9
rom_po_attr:        equ 0x0BDB
rom_po_change:      equ 0x0A80
rom_po_char:        equ 0x0B65
rom_po_fetch:       equ 0x0B03
rom_po_msg:         equ 0x0C0A
rom_po_save:        equ 0x0C3B
rom_po_store:       equ 0x0ADC
rom_po_t_udg:       equ 0x0B52
rom_po_tokens:      equ 0x0C10
rom_point_sub_22ce: equ 0x22CE ; secondary entry to POINT-SUB
rom_pr_all:         equ 0x0B7F ; "print all characters"
rom_pr_string:      equ 0x203C ; print a string (start in DE, count in BC)
rom_print_fp:       equ 0x2DE3 ; print a floating point number
rom_print_out:      equ 0x09F4
rom_print_string:   equ 0x203C
rom_ram_set:        equ 0x1219
rom_report_5:       equ 0x0C86
rom_report_j:       equ 0x15C4
rom_s_attr_s_2583:  equ 0x2583 ; secondary entry to S-ATTR-S
rom_s_scrn_s:       equ 0x2535
rom_s_scrn_s_2538:  equ 0x2538 ; secondary entry to S-SCRN$-S
rom_sa_all:         equ 0x075A ; tape save/load
rom_sa_bytes:       equ 0x04C2
rom_set_min:        equ 0x16B0
rom_stack_a:        equ 0x2D28
rom_stack_bc:       equ 0x2D2B ; stack BC register pair
rom_stack_fetch:    equ 0x2BF1 ; get last value from calculator stack
rom_stk_to_a:       equ 0x2314
rom_stmt_ret:       equ 0x1B76
rom_temps:          equ 0x0D4D ; copy the permanent color items to the temporary ones
rom_wait_key:       equ 0x15D4

; Special entry points:

rom_set_permanent_colors_0x1CAD:  equ 0x1CAD

