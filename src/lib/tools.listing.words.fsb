  \ tools.listing.words.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 20160324

  \ -----------------------------------------------------------
  \ Description

  \ Words to list words.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

( more-words? )

: more-words?  ( -- f )  dup 0<>  nuf? 0= and  ;
  \ A common factor of `words` and `words-like`.

( words )

  \ Credit:
  \
  \ Code adapted from Spectrum Forth-83.

need trail  need name>link  need tab  need nuf?
need more-words?

: words  ( -- )
  trail
  begin  more-words?  while
    dup .name tab  name>link @s
  repeat drop  ;

( wordlist-words )

need words

: wordlist-words  ( wid -- )  >order  words  previous  ;

( words-like )

  \ Credit:
  \
  \ Code adapted from pForth.

need trail  need name>link  need tab  need nuf?
need more-words?

[defined] contains
?\ : contains  ( ca1 len1 ca2 len2 -- f )  search nip nip  ;
   \ Does the string _ca1 len1_ contains the string _ca2
   \ len2?_

: words-like  ( "name" -- )
  \ Print all words (from the `context` vocabulary) containing a substring.
  parse-name 2dup uppers trail  ( ca len nt )
  begin  more-words?  while
    dup >r
    name>string 2over contains if  r@ .name tab  then
    r> name>link @s
  repeat drop 2drop  ;

  \ vim: filetype=soloforth
