  \ modules.minus-transient.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201611181929

  \ -----------------------------------------------------------
  \ Description

  \ Implementation of transient modules, whose code is
  \ discarded after being used. First intended for assemblers,
  \ but can be used for any other tool needed during the
  \ compilation of a program, but not during the execution.
  \ The size of the discarded code must be known in advance.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ Credit

  \ The code was adapted from the Afera library. The Afera
  \ version was adapted from Spectrum Forth-83 (by Lennart
  \ Benschop, 1988), where it was used only for the assembler.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ Latest changes

  \ 2016-06-01: Update: `there` was moved from the kernel to
  \ the library.
  \
  \ 2016-11-13: Rename "np" to "hp" after the changes in the
  \ kernel.
  \
  \ 2016-11-18: Adapt to far memory and fix. Use `limit`.
  \ Improve documentation.

( transient[ ]transient -transient )

need >>link  need there

variable old-dp  variable old-latest
variable old-hp  variable old-voc-link  variable old-limit

: transient[  ( u -- )
  here old-dp !  hp@ old-hp !
  current-latest old-latest !  voc-link @ old-voc-link !
  limit @ dup old-limit ! swap - dup limit ! there  ;

  \ doc{
  \
  \ transient[  ( u -- )
  \
  \ Start transient code, reserving _u_ bytes of data space for
  \ it, which will be allocated at the top of the main memory.
  \
  \ This word must be used before compiling the transient code.
  \ the compiled size of the transient code must be known in
  \ advance.
  \
  \ Note: `limit` must be preserved between `transient[` and
  \ `]transient`, because `-transient`
  \
  \ See: `]transient`, `-transient`.
  \
  \ }doc

: ]transient  ( -- )
  old-dp @ there  old-hp @ hp!  old-limit @ limit !  ;

  \ doc{
  \
  \ ]transient  ( -- )
  \
  \ End the transient code.
  \
  \ This word must be used after compiling the transient code.
  \
  \ See: `transient[`, `-transient`.
  \
  \ }doc

: -transient  ( -- )
  old-voc-link @ voc-link !  old-latest @ old-hp @ >>link
  [defined] far-banks ?\ !s  ;
  [undefined] far-banks ?\ far!  ;

  \ doc{
  \
  \ -transient  ( -- )
  \
  \ Remove the transient code, unlinking the dictionary space
  \ that was reserved for it.
  \
  \ This word must be used when the transient code is not going
  \ to be used any more.
  \
  \ The inner operation is: Store the _nt_ of the latest word
  \ created before compiling the transient code, into the _lfa_
  \ of the first word created after the transient code was
  \ finished by `]transient`.
  \
  \ See: `transient[`, `]transient`.
  \
  \ Usage example:
  \
  \ ----
  \ transient[
  \   need assembler \ compile in transient zone above `limit`
  \ ]transient
  \ \ ...use assembler here...
  \ -transient \ remove assembler; no data space was wasted
  \ ----
  \
  \ }doc

  \ vim: filetype=soloforth
