  \ alias.synonym.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 20160324

  \ -----------------------------------------------------------
  \ Description

  \ An implementation of Forth-2012 `synonym`.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

( synonym )

need alias

: synonym  ( "newname" "oldname" -- )
  parse-name nextname ' dup >r alias
  r> >name dup immediate?     if  immediate     then
               compile-only?  if  compile-only  then  ;

  \ doc{
  \
  \ synonym  ( "newname" "oldname" -- )
  \
  \ Create a definition for _newname_ with the the semantics
  \ defined below. _newname_ may be the same as _oldname_; when
  \ looking up _oldname_, _newname_ shall not be found.

  \ newname ( Interpretation: i*x -- j*x )
  \         Perform the interpretation semantics of _oldname_.
  \
  \ newname ( Compilation: i*x -- j*x )
  \         Perform the compilation semantics of _oldname_.
  \
  \ Origin: Forth-2012 (TOOLS EXT).
  \
  \ }doc

exit

  \ XXX OLD -- first version
  \ XXX FIXME -- `' newname` would not work fine

  \ Credit:
  \
  \ This code of `synonym` is adapted from the example provided
  \ in the Forth-2012 documentation, and improved with
  \ `compile-only?`.

: synonym  ( "newname" "oldname" -- )
  create immediate
    hide ' , reveal
  does>  ( -- )
   ( pfa ) @ ( xt ) dup >name dup ( xt nt nt )
   compile-only? executing? and -14 ?throw
   immediate? executing? or
   if  execute  else  compile,  then  ;

  \ vim: filetype=soloforth
