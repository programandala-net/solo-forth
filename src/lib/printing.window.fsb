  \ printing.window.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201612241951

  \ -----------------------------------------------------------
  \ Description

  \ Basic implementation of text windows, which use specific
  \ printing words and share the global color attributes.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ History

  \ 2016-12-23: Start.
  \
  \ 2016-12-24: First working version.

( window set-window )

need +field-opt-0124 need cfield:

0 cfield: ~wx         \ x cursor coordinate
  cfield: ~wy         \ y cursor coordinate
  cfield: ~wx0        \ window left x coordinate on screen
  cfield: ~wy0        \ window top y coordinate on screen
  cfield: ~wcolumns   \ width
  cfield: ~wrows      \ heigth
constant /window

variable current-window

: wx        ( -- ca )  current-window @ ~wx        ;
: wy        ( -- ca )  current-window @ ~wy        ;
: wx0       ( -- ca )  current-window @ ~wx0       ;
: wy0       ( -- ca )  current-window @ ~wy0       ;
: wcolumns  ( -- ca )  current-window @ ~wcolumns  ;
: wrows     ( -- ca )  current-window @ ~wrows     ;  -->

( window set-window )

: window  ( "name" -- )
  create  here  /window allot  current-window !
  does>   ( -- )  ( pfa ) current-window !  ;
  \ Create a window called _name_ and make it the current one.
  \ Later execution of `name` will make it the current one.

: set-window  ( x0 y0 columns rows -- )
  wrows c!  wcolumns c!  wy0 c! wx0 c!  ;
  \ Set the current window: _x0 y0_ is the position of its top
  \ left corner on the screen, and _columns rows_ is its size.

( wspace wemit wfreecolumns (wat-xy wat-xy at-wxy )

[unneeded] wspace
?\ need wemit  : wspace  ( -- )  bl wemit  ;  exit

need ?(

[unneeded] wemit ?(  need char>string  need wtype
: wemit  ( c -- )  char>string wtype  ;  exit ?)

[unneeded] wfreecolumns ?(  need window
: wfreecolumns  ( -- n )  wcolumns c@ wx c@ -  ;  exit ?)
  \ Return the number _n_ of free columns in the current
  \ line of the current window.

[unneeded] (wat-xy ?(  need window  need under+
: (wat-xy  ( x y -- )  wx0 c@ under+ wy0 c@ + at-xy  ;
exit ?)
  \ Set the cursor at current window coordinates _x y_.

[unneeded] wat-xy ?(  need window  need (wat-xy
: wat-xy  ( x y -- )  2dup wy c! wx c!  (wat-xy  ;  exit ?)
  \ Set the current window coordinates to _x y_ and set the
  \ cursor there.

[unneeded] at-wxy ?(  need window  need (wat-xy
: at-wxy  ( -- )  wx c@ wy c@ (wat-xy  ;  exit ?)
  \ Set the cursor at the current window coordinates.

( whome wcr ?wcr reset-window wcls )

[unneeded] whome
?\ need wat-xy  : whome  ( -- )  0 0 wat-xy  ;  exit
  \ Set the current window coordinates to the first column and
  \ the first row.

need ?(  [unneeded] wcr ?(  need window  need whome

: wcr  ( -- )  wy c@ dup wrows c@ 1- =
               if  drop whome exit  then  1+ wy c! 0 wx c!  ;
exit ?)
  \ Cause subsequent output to the current window appear at the
  \ beginning of the next line.
  \
  \ XXX TODO -- scroll instead of `whome`

[unneeded] ?wcr ?(  need window  need wcr
: ?wcr  ( -- )  wx c@ 0= ?exit wcr  ;  exit ?)
  \ If the x curser coordinate of the current window is not
  \ zero, cause subsequent output to the current window appear
  \ at the beginning of the next line.

[unneeded] reset-window ?(

need columns  need rows  need set-window

: reset-window  ( -- )  0 0 columns rows set-window  ;  exit ?)
  \ Set the current window to use the full screen.

[unneeded] wcls ?(  need window  need whome  need ruler

: wcls  ( -- )  bl wcolumns c@ ruler  ( ca len )
  wy0 c@ wrows c@ bounds ?do   2dup wx0 c@ i at-xy type
                         loop  2drop  whome  ;  exit ?)
  \ Clear the current window.

( wtype )

need window need at-wxy need wfreecolumns need wcr need ?wcr

: +wc  ( n -- )
  wx c@ + dup wx c! wcolumns c@ = if  wcr  then  ;
  \ Add _n_ character positions to the x cursor coordinate of
  \ the current window.

variable wtyped
  \ A flag that indicates if a space-delimited substring was
  \ found and printed in the current window. Otherwise, the
  \ string must be broken in order to fit the current line of
  \ the window.

: wtype+  ( ca len -- )  tuck type +wc  wtyped on  ;
  \ Type string _ca len_ in the current window and update
  \ the window coordinates accordingly.

: /wtype  ( ca len len1 n -- ca' len' )
  >r >r over r> at-wxy wtype+ r> /string  ;
  \ Type the first  _len1_ characters of string _ca len_ in the
  \ current window, then remove the first _n_ characters from
  \ the string, returning the result string _ca' len'_.

: wtype  ( ca len -- )  wtyped off
  begin  dup wfreecolumns >  while
    0 wfreecolumns do  over i + c@ bl =
                       if  i dup 1+ /wtype leave  then
                   -1 +loop
    wtyped @ if    ?wcr wtyped off
             else  wfreecolumns dup /wtype  then
  repeat  at-wxy wtype+  ;
  \ Type string _ca len_ in the current window, left justified.

  \ vim: filetype=soloforth
