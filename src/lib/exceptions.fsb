  \ exceptions.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 20160324

  \ -----------------------------------------------------------
  \ Description

  \ The management of exceptions.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

( abort" )

  \ Credit:
  \
  \ Code adapted from DZX-Forth.

  \ XXX TODO use `error`, by modifying `throw`

[defined] abort-message ?\ 2variable abort-message

: (abort")  ( n -- )
  r> count rot if  abort-message 2! -2 throw  then + >r  ;

: abort"  ( Compilation: "ccc<quote>" -- )
  postpone (abort") ,"  ; immediate compile-only

( error>ordinal error>line )

: error>ordinal  ( -n1 -- +n2 )
  \ Convert an error code to its ordinal position in the
  \ library.
  \ -n1 =  -90..-1        \ Standard error codes
  \        -285..-256     \ Solo Forth error codes
  \        -1024..-1000   \ G+DOS error codes
  \ +n2 =  1..146

  \ XXX TODO  add OS codes

  abs
  dup 256 < ?exit
  dup 1000 < if  [ 255 091 - ] literal - exit  then
  [ 1000 286 - 255 091 - + ] literal -   ;

: error>line  ( n1 -- n2 )
  error>ordinal dup >r
  begin
    dup dup 16 / - r@ <>  while  1+
  repeat  rdrop  ;

\ msg-scr (.throw) \

need error>line  need .line

variable msg-scr
s" Standard error codes" locate msg-scr !
  \ XXX TODO rename!

  \ doc{
  \
  \ msg-scr  ( -- a )
  \
  \ Variable that holds the block that holds the error
  \ messages.
  \
  \ }doc

: (.throw)  ( n -- )
  msg-scr @
  if  error>line msg-scr @ .line space  else  .throw#  then  ;

' (.throw) ' .throw defer!

  \ doc{
  \
  \ (.throw)  ( n -- )
  \
  \ Extended behaviour of the deferred word `.throw`:
  \ Print the text of throw error _n_.  The variable `msg-scr`
  \ contains the number of the first block where messages are
  \ hold. If it contains zero, only the error number is printer.
  \
  \ }doc

( ?compiling ?executing )

[unneeded] ?compiling
?\ : ?compiling  ( -- )  compiling? 0= -14 ?throw  ;

  \ doc{
  \
  \ ?compiling  ( -- )
  \
  \ Issue an error if not compiling.
  \
  \ }doc

[unneeded] ?executing
?\ : ?executing  ( -- )  compiling? -263 ?throw  ;

  \ doc{
  \
  \ ?executing  ( -- )
  \
  \ Issue an error if not executing.
  \
  \ }doc

  \ vim: filetype=soloforth

