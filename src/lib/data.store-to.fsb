  \ data.store-to.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201605102309

  \ -----------------------------------------------------------
  \ Description

  \ Words that change the value of constants.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ History

  \ 2016-05-10: First version.

( !> 2!> c!> )

need ?(

[unneeded] !> ?(
: !>  ( Int: x "name" -- ) ( Comp: "name" -- ) ( Exe: x -- )
  ' >body compiling? if    postpone literal postpone ! exit
                     then  !  ; immediate ?)

  \ Credit:
  \
  \ Name borrowed from IsForth.

  \ doc{
  \
  \ !>
  \
  \ Interpretation: ( x "name" -- )
  \
  \ Parse "name", which is the name of a word created by
  \ `constant`, and make _x_ its value.
  \
  \ Compilation: ( "name" -- )
  \
  \ Parse "name", which is a word created by `constant`, and
  \ append the execution execution semantics given below to the
  \ current definition.
  \
  \ Execution: ( x -- )
  \ 
  \ Make _x_ the current value of constant "name".
  \
  \ Origin: IsForth.
  \
  \ }doc

[unneeded] 2!> ?(
: 2!>  ( Int: xd "name" -- ) ( Comp: "name" -- ) ( Exe: xd -- )
  ' >body compiling? if    postpone literal postpone 2! exit
                     then  2!  ; immediate ?)
  
  \ doc{
  \
  \ 2!>
  \
  \ Interpretation: ( xd "name" -- )
  \
  \ Parse "name", which is the name of a word created by
  \ `2constant`, and make _xd_ its value.
  \
  \ Compilation: ( "name" -- )
  \
  \ Parse "name", which is a word created by `2constant`, and
  \ append the execution execution semantics given below to the
  \ current definition.
  \
  \ Execution: ( xd -- )
  \ 
  \ Make _xd_ the current value of double-cell constant "name".
  \
  \ Origin: IsForth `!>`.
  \
  \ }doc

[unneeded] c!> ?(
: c!>  ( Int: c "name" -- ) ( Comp: "name" --) ( Exe: c -- )
  ' >body compiling? if    postpone literal postpone c! exit
                     then  c!  ; immediate ?)

  \ doc{
  \
  \ c!>
  \
  \ Interpretation: ( c "name" -- )
  \
  \ Parse "name", which is the name of a word created by
  \ `cconstant`, and make _c_ its value.
  \
  \ Compilation: ( "name" -- )
  \
  \ Parse "name", which is a word created by `cconstant`, and
  \ append the execution execution semantics given below to the
  \ current definition.
  \
  \ Execution: ( c -- )
  \ 
  \ Make _c_ the current value of the character constant
  \ "name".
  \
  \ Origin: IsForth `!>`.
  \
  \ }doc



