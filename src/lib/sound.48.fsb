  \ sound.48.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201701190210

  \ -----------------------------------------------------------
  \ Description

  \ Words related to 48k sound.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016, 2017.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ History

  \ 2015: Main development.
  \
  \ 2016-04-14: Documented `bleep` and `beep>bleep`.
  \
  \ 2016-12-20: Rename `jpnext` to `jpnext,` after the change
  \ in the kernel.
  \
  \ 2016-12-30: Compact the code, saving two blocks.
  \
  \ 2017-01-03: Convert `laser-gun`, `ambulance`, and
  \ `white-noise` from `z80-asm` to `z80-asm`. Fix needing of
  \ `laser-gun` and `ambulance`. Fix structures: use `<mark ...
  \ ?jr` instead of `rbegin ... ?jr`. Improve documentation.
  \
  \ 2017-01-05: Update `need z80-asm,` to `need assembler`.
  \
  \ 2017-01-18: Remove `exit` at the end of conditional
  \ interpretation.
  \
  \ 2017-01-19: Improve documentation.

( bleep >bleep )

need ?(

[unneeded] bleep ?(

code bleep  ( duration pitch -- )
 E1 c, D1 c, C5 c, CD c, 03B5 , C1 c, DD c, 21 c, next ,
    \ pop hl
    \ pop de
    \ push bc ; save Forth IP
    \ call rom_beeper
    \ pop bc ; restore Forth IP
    \ ld ix,next ; restore IX
  jpnext, end-code ?)

  \ Credit:
  \
  \ Code modified from Abersoft Forth.

  \ doc{
  \
  \ bleep  ( duration pitch -- )
  \
  \ Produce a tone in the internal beeper. This word calls the
  \ BEEPER ROM routine with _pitch_ in the HL register and
  \ _duration_ in the DE register.
  \
  \ The following description is taken, with small layout
  \ changes, from _Spectrum Advanced Forth_ by Don Thomasson
  \ (Melbourne House, 1984), page 26:
  \
  \ _____
  \
  \ (...) but while there is greater flexibility than is
  \ directly available in BASIC the system is more difficult to
  \ use.  Precalculation is necessary to obtain musical scales,
  \ on the following basis:
  \
  \ To generate a frequency of F Hz, _pitch_ must be set to:
  \
  \ `pitch = (437500/F)-30`
  \
  \ Looking in the opposite direction:
  \
  \ `F = 437500/(pitch+30)`
  \
  \ The duration of the note is determined as a number of
  \ cycles, so _duration_ must be set to `F x T`, where T is
  \ the duration in seconds.
  \
  \ A point to note is that if a very low frequency is
  \ selected, with a high duration, the system may appear to
  \ hang up, because the BEEPER ROM routine goes on and on...;
  \ whithout the user being able to use BREAK.
  \
  \ _____

  \
  \ The following technical information about the BEEPER ROM
  \ routine is taken, with small layout changes, from the ZX
  \ Spectrum disassembly by Dr. Ian Logan, Dr.  Frank O'Hara et
  \ al.:
  \
  \ _____

  \ Output a square wave of given duration and frequency
  \ to the loudspeaker.
  \
  \ Enter with:

  \ - DE = #cycles - 1
  \ - HL = tone period as described next

  \ The tone period is measured in T states and consists of
  \ three parts: a coarse part (H register), a medium part
  \ (bits 7..2 of L) and a fine part (bits 1..0 of L) which
  \ contribute to the waveform timing as follows:

  \ ....
  \                          coarse    medium       fine
  \ duration of low  = 118 + 1024*H + 16*(L>>2) + 4*(L&$3)
  \ duration of hi   = 118 + 1024*H + 16*(L>>2) + 4*(L&$3)
  \ Tp = tone period = 236 + 2048*H + 32*(L>>2) + 8*(L&$3)
  \                  = 236 + 2048*H + 8*L = 236 + 8*HL
  \ ....

  \ As an example, to output five seconds of middle C (261.624
  \ Hz):

  \ 1. Tone period = 1/261.624 = 3.822ms
  \ 2. Tone period in T-States = 3.822ms*fCPU = 13378
  \    (where fCPU = clock frequency of the CPU = 3.5MHz)
  \ 3. Find H and L for desired tone period:
  \    HL = (Tp - 236) / 8 = (13378 - 236) / 8 = 1643 =
  \    $066B
  \ 4. Tone duration in cycles = 5s/3.822ms = 1308 cycles
  \ 5. DE = 1308 - 1 = $051B

  \
  \ The resulting waveform has a duty ratio of exactly 50%.
  \ _____

  \
  \ See: `>bleep`.
  \
  \ }doc

[unneeded] >bleep ?(

: >bleep  ( frequency duration1 -- duration2 pitch )
  over 1000 */ swap  4375 100 rot */ 30 -  ; ?)

  \ Credit:
  \
  \ Code from v.Forth.

  \ doc{
  \
  \ >bleep  ( frequency duration1 -- duration2 pitch )
  \
  \ Convert _frequency_ (in Hz) and _duration1_ (in ms) to
  \ the parameters _duration2 pitch_ needed by `bleep`.
  \
  \ See: `bleep`.
  \
  \ }doc

( laser-gun ambulance )

need ?( [unneeded] laser-gun ?(  need assembler

code laser-gun  ( -- )  b push, 5 b ld#, 0500 h ldp#,
  <mark  0001 d ldp#,
         h push, 03B5 call, h pop,  \ ROM beeper
         0010 d ldp#, d subp,  nz? ?jr,
  b pop, next ix ldp#, jpnext,  end-code ?)

  \ Credit:
  \
  \ Author of the original code: Álvaro Corredor Lanas.
  \ Published on Microhobby, issue 126 (1987), page 7:
  \ http://microhobby.org/numero126.htm
  \ http://microhobby.speccy.cz/mhf/126/MH126_07.jpg

  \ doc{
  \
  \ laser-gun  ( -- )
  \
  \ Laser gun sound for ZX Spectrum 48K.
  \
  \ }doc

[unneeded] ambulance ?(  need assembler

code ambulance  ( n -- )

  \ n = times

  d pop, b push, e b ld,

  rbegin  b push, 0320 h ldp#, 000A d ldp#,
          <mark   h push,
                  03B5 call,  \ ROM beeper
                  h pop, h decp, h tstp,  nz? ?jr,
          b pop,  rstep

  b pop, next ix ldp#, jpnext, end-code ?)

  \ Credit:
  \
  \ Author of the original code: Líder Software.
  \ Published on Microhobby, issue 142 (1987-09), page 7:
  \ http://microhobby.org/numero142.htm
  \ http://microhobby.speccy.cz/mhf/142/MH142_07.jpg

  \ doc{
  \
  \ ambulance  ( n -- )
  \
  \ Ambulance sound for ZX Spectrum 48K. Make it _n_ times.
  \
  \ }doc

( white-noise )

need assembler

code white-noise  ( u -- )

  d pop,
  b push,  \ save the Forth IP
  d b ldp, 0000 h ldp#,  \ BC=duration, HL=start of ROM

  5C48 fta, a sra, a sra, a sra, 07 and#, a d ld,
    \ D = border color (in bits 0-2)

  <mark   m e ld, h incp, b decp, b push,
          08 b ld#,  \ bit counter
          rbegin   e a ld, 10 and#, e rl, d or, FE out,  \ beep
                  rstep
          b pop, b tstp,
          nz? ?jr,

  b pop, jpnext, \ restore the Forth IP and go next

  end-code

  \ Credit:
  \
  \ Author of the original code: Ricardo Serral Wigge.
  \ Published on Microhobby, issue 125 (1987), page 26:
  \ http://microhobby.org/numero125.htm
  \ http://microhobby.speccy.cz/mhf/125/MH125_26.jpg

  \ The original code was called "explosion" and had a fixed
  \ duration of 768 sample bytes, thus equivalent to `768
  \ white-noise`.

  \ doc{
  \
  \ white-noise  ( -- )
  \
  \ White noise for ZX Spectrum 48K.  _u_ is the duration in
  \ number of sample bytes.
  \
  \ }doc

  \ vim: filetype=soloforth
