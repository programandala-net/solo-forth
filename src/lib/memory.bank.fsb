  \ memory.bank.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201610261304

  \ -----------------------------------------------------------
  \ Description

  \ Words related to memory banks.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ History

  \ 2016-04-17: Move `!s` and `!cs` from the kernel.
  \
  \ 2016-04-24: Move `get-default-bank` and `set-default-bank`
  \ from the kernel.
  \
  \ 2016-10-24: Add `extra-memory` and related words to manage
  \ a virtual 64-KiB space using 4 memory banks.
  \
  \ 2016-10-25: Improve comment.
  \
  \ 2016-10-26: Remove `extra-memory` and `a>e`, which have
  \ been moved to the kernel.

( !s c!s )

: !s  ( x a -- )  system-bank ! default-bank  ;

  \ doc{
  \
  \ !s  ( x a -- )
  \
  \ Store _x_ into address _a_ of the system bank.
  \
  \ }doc

: c!s  ( c ca -- )  system-bank c! default-bank  ;

  \ doc{
  \
  \ c!s  ( c ca -- )
  \
  \ Store _c_ into address _ca_ of the system bank.
  \
  \ }doc

( get-default-bank set-default-bank )


: get-default-bank  ( -- +n )  default-bank# c@  ;

  \ doc{
  \
  \ get-default-bank  ( -- +n )
  \
  \ Get the current default bank _+n_ (0..7) paged in at
  \ $C000..$FFFF.
  \
  \ }doc

: set-default-bank  ( +n -- )  default-bank# c!  ;

  \ doc{
  \
  \ set-default-bank  ( +n -- )
  \
  \ Set _+n_ (0..7) as the default memory bank paged in at
  \ $C000..$FFFF.
  \
  \ }doc

( c!e c@e !e !eb @e @eb )

need join  need split

: c!e  ( c a -- )  a>e c! default-bank  ;

  \ doc{
  \
  \ c!e  ( c a -- )
  \
  \ Store _c_ into extra-memory address _a_.
  \
  \ }doc

: c@e  ( a -- c )  a>e c@ default-bank  ;

  \ doc{
  \
  \ c@e ( a -- c )
  \
  \ Fetch _c_ from extra-memory address _a_.
  \
  \ }doc

: !e  ( x a -- )  >r split r@ 1+ a>e c! r> c!e  ;

  \ XXX OLD -- faster but larger version:
  \ : !e  ( x a -- )
  \   >r split r@ 1+ a>e c! r> a>e c! default-bank  ;

  \ doc{
  \
  \ !e  ( x a -- )
  \
  \ Store _x_ into extra-memory address _a_.
  \
  \ See: `!eb`.
  \
  \ }doc

: !eb  ( x a -- )  a>e ! default-bank   ;

  \ doc{
  \
  \ !eb ( a -- x )
  \
  \ Store _x_ into extra-memory address _a_, provided _a_ and
  \ _a+1_ belong to the same bank.  In other words, _a_ can not
  \ be the last address of a 16-KiB section ($3FFF, $7FFF,
  \ $BFFF or $FFFF), else the high byte of _x_ will be "stored"
  \ into ROM address $0000.
  \
  \ See: `!e`.
  \
  \ }doc

: @e  ( a -- x )  dup 1+ a>e c@ >r c@e r> join   ;

  \ XXX OLD -- faster but larger version:
  \ : @e  ( a -- x )
  \   dup 1+ a>e c@ >r a>e c@ r> join default-bank  ;

  \ doc{
  \
  \ @e ( a -- x )
  \
  \ Fetch _x_ from extra-memory address _a_.
  \
  \ See: `@eb`.
  \
  \ }doc

: @eb  ( a -- x )  a>e @ default-bank   ;

  \ doc{
  \
  \ @eb ( a -- x )
  \
  \ Fetch _x_ from extra-memory address _a_, provided _a_ and
  \ _a+1_ belong to the same bank. In other words, _a_ can not
  \ be the last address of a 16-KiB section ($3FFF, $7FFF,
  \ $BFFF or $FFFF), else the high byte of _x_ will be fetched
  \ from ROM address $0000.
  \
  \ See: `@e`.
  \
  \ }doc

  \ vim: filetype=soloforth
