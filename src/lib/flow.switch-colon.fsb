  \ flow.switch-colon.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201612071014
  
  \ -----------------------------------------------------------
  \ Description

  \ An extendable case selector implemented with word lists.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ History
  
  \ 2015-11-16: Start.
  \
  \ 2016-11-26: Need `search-wordlist`, which has been moved to
  \ the library.
  \
  \ 2016-12-06: Update: Replace `next-name` with `nextname`.
  \ Fix the key to string converter, rename it and move it to
  \ <strings.misc.fsb>. Document and test the code.
  \
  \ 2016-12-07: Rename module to <flow.switch-colon.fsb>.
  \ Rename `>cell-string` to `>bstring`.

( switch: )

  \ XXX TODO -- add default xt

need search-wordlist  need nextname  need >bstring

: switch:  ( "name" -- )  wordlist constant  ;
  
  \ doc{
  \
  \ switch:  ( "name" -- )
  \
  \ Create a new switch control structure _name_.
  \
  \ Usage example:
 
  \ ----
  \ switch: mynumber
  \
  \ \ Define the clauses for keys 0..2:
  \
  \ 0 mynumber :clause  ( -- )  cr ." zero"  ;
  \ 1 mynumber :clause  ( -- )  cr ." one"   ;
  \ 2 mynumber :clause  ( -- )  cr ." two"   ;
  \
  \ \ Execute the clauses:
  \
  \ 0 mynumber switch
  \ 1 mynumber switch
  \ 2 mynumber switch
  \ ----
 
  \ Key clauses are unsigned numbers.
  \
  \ New clauses can be added any time.
  \
  \ If a new clause is added with a previously used key, the
  \ new clause will replace the old one.
  \
  \ There's no default clause: if the a given key is not found,
  \ no code is executed and no exception is thrown.
  \
  \ See: `:clause`, `switch`.
 
  \ }doc

: switch  ( u switch -- )
  swap >bstring rot search-wordlist if  execute  then  ;

  \ doc{
  \
  \ switch  ( u switch -- )
  \
  \ Execute the switch _switch_ for the key _u_.
  \
  \ See: `switch`.
  \
  \ }doc

: :clause  ( x switch -- )
  get-current >r set-current  >bstring nextname :
              r> set-current  ;

  \ doc{
  \
  \ :clause  ( x switch -- )
  \
  \ Start the definition of a switch clause _x_ for switch
  \ _switch_.
  \
  \ See: `switch`.
  \
  \ }doc

  \ vim: filetype=soloforth
