  \ locals.arguments.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 20160324

  \ -----------------------------------------------------------
  \ Description

  \ An implementation of locals by Marc
  \ Perkel.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.


( arguments results )

  \ XXX UNDER DEVELOPMENT

  \ 2015-11-14: Start.

  \ Credit:
  \
  \ Original code by Marc Perkel, published on Forth Dimensions
  \ (volume 3, number 6, page 6, 1982-03).

need 2/

variable >args
  \ address of the current arguments in the data stack
variable arg-action
  \ id of the argument action (fetch, store or add)

: arg:  ( n "name" -- )
  create  ,
  does>  ( a -- x ) ( x a -- )
    \ ( a pfa | x a pfa )
    @ >args @ swap -
    arg-action @ ?dup if    0< if  +!  else  !  then
                      else  @
                      then  arg-action off  ;
  \ create a new argument

$00 arg: s0 $02 arg: s1 $04 arg: s2 $06 arg: s3 $08 arg: s4
$0A arg: s5 $0C arg: s6 $0E arg: s7 $0A arg: s8 $0C arg: s9

: to  ( -- )  1 arg-action !  ;
  \ set the store action

: +to  ( -- )  -1 arg-action !  ;
  \ set the add action

-->

( arguments results )

  \ XXX OLD -- original
  \ : arguments  ( n -- )
  \   r> >args @ >r >r  \ save the contents of `>args`
  \   cells sp@ + dup >args ! 12 - sp@ swap -
  \   2/ 0 do  0  loop  arg-action !  ;

  : arguments  ( n -- )
  r> >args @ >r >r        \ save `>args`
  cells sp@ + dup >args ! 12 - sp@ swap -
  2/ 0 do  0  loop  arg-action !  ;

: results  ( n -- )
  cells >args @ swap - sp@ -
  2/ 0 do drop loop
  r> r> >args ! >r  ;     \ restore `>args`

-->

( arguments results )

  \ test

: test  ( n1 n2 n3 -- )
  cr ." check 1" .s \ XXX INFORMER
  3 arguments
  cr ." check 2" .s \ XXX INFORMER
  s0 s1 s2 * * to s4
  s0 s1 s2 + + to s5
  s5 to s2
  s4 to s1
  cr ." check 3" .s \ XXX INFORMER
  2 results
  cr ." check 4" .s \ XXX INFORMER
  ;

  \ vim: filetype=soloforth
