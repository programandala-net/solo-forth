  \ flow.thiscase.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201612202020

  \ -----------------------------------------------------------
  \ Description

  \ `thiscase`, an alternative `case` structure that makes any
  \ calculation easier.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ Credit

  \ Adapted and modified from code written by Wil Baden,
  \ published on Forth Dimensions (volume 8, number 5, page 29,
  \ 1987-01).

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ History

  \ 2015-11-14: First version.
  \
  \ 2016-03-24: Rename the words to avoid standard names
  \ `case`, `of` and `endof`.
  \
  \ 2016-04-27: Improve documentation and file header.
  \
  \ 2016-12-20: Improve documentation.

( thiscase )

need alias

: ifcase  ( x f -- )
  postpone if  postpone drop  ; immediate compile-only

  \ doc{
  \
  \ ifcase  ( x f -- )
  \
  \ Part of a `thiscase ifcase exitcase` structure that checks
  \ _x_. If _f_ is true, discard _x_ and continue execution;
  \ else skip the code compiled until the next `exitcase`.
  \
  \ See `thiscase`, `exitcase`, `othercase`.
  \
  \ }doc

: exitcase  ( -- )
  postpone exit  postpone then  ; immediate compile-only

  \ doc{
  \
  \ exitcase  ( -- )
  \
  \ End part of a `thiscase ifcase exitcase` structure:
  \ exit the current definition.
  \
  \ See `thiscase`, `ifcase`, `othercase`.
  \
  \ }doc

' dup alias thiscase  ( x -- x x )

  \ doc{
  \
  \ thiscase  ( x -- x x )
  \
  \ Mark the start of a `thiscase ifcase exitcase` structure
  \ that checks _x_.
  \
  \ See: `ifcase`, `exitcase`, `othercase`.
  \
  \ Usage example:

  \ ----
  \ : say0       ( -- )  ." nul"   ;
  \ : say1       ( -- )  ." unu"   ;
  \ : say2       ( -- )  ." du"    ;
  \ : say-other  ( -- )  ." alia"  ;
  \
  \ : test  ( x -- )
  \   thiscase  0 = ifcase  say0  exitcase
  \   thiscase  1 = ifcase  say1  exitcase
  \   thiscase  2 = ifcase  say2  exitcase
  \   othercase say-other  ;
  \ ----
  \
  \ }doc

' drop alias othercase  ( n -- )

  \ doc{
  \
  \ othercase  ( x -- )
  \
  \ Mark the start of the default option after a list of
  \ `thiscase ifcase exitcase` structures that checked _x_.
  \
  \ See `thiscase`, `ifcase`, `exitcase`.
  \
  \ }doc

  \ vim: filetype=soloforth
