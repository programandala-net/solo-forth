  \ tool.list.blocks.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201611202038

  \ -----------------------------------------------------------
  \ Description

  \ Words to list blocks.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ Latest changes

  \ 2016-11-20: Factor `list-lines` from `list`. Improve
  \ documentation of all words. Compact the code to save one
  \ block. Add conditional compilation to `list`, `list-lines`,
  \ `index`, `.index`.

( list-lines list index .index )

need ?(

[unneeded] list-lines ?(  need .line  need nuf?
: list-lines  ( u1 u2 u3 -- )  
  rot dup scr ! cr ." Scr # " .  1+ swap
  ?do  cr i 2 .r space i scr @ .line nuf? ?leave  loop cr  ;
exit ?)

  \ doc{
  \
  \ list-lines  ( u1 u2 u3 -- )
  \
  \ Display lines _u2..u3_ of block _u1_ and store _u1_ in `scr`.
  \
  \ See: `list`, `scr`.
  \
  \ }doc

[unneeded] list ?(  need list-lines
: list  ( u -- )  0 [ l/scr 1- ] literal list-lines  ;  exit ?)

  \ doc{
  \
  \ list  ( u -- )
  \
  \ Display block _u_ and store _u_ in `scr`.
  \
  \ See: `list-lines`, `scr`.
  \
  \ Origin: fig-Forth, Forth-79 (Required Word Set), Forth-83
  \ (Controlled Reference Words), Forth-94 (BLOCK EXT),
  \ Forth-2012 (BLOCK EXT).
  \
  \ }doc

[unneeded] .index ?(  need .line
: .index  ( u -- )  cr dup 3 .r space 0 swap .line  ;  exit ?)

  \ doc{
  \
  \ .index  ( u -- )
  \
  \ Print the first line of the block _u_, which conventionally
  \ contains a comment with a title.
  \
  \ }doc

[unneeded] index ?(  need .line  need nuf?
: index  ( u1 u2 -- )
  1+ swap ?do  cr i 3 .r space 0 i .line  nuf? ?leave  loop  ;
exit ?)

  \ doc{
  \
  \ index  ( u1 u2 -- )
  \
  \ Print the first line of each block over the range from
  \ _u1_ to _u2_, which conventionally contains a comment with
  \ a title.
  \
  \ Origin: fig-Forth, Forth-79 (Reference Word Set), Forth-83
  \ (Uncontrolled Reference Words).
  \
  \ }doc

( index-like )

need .index  need nuf?

[defined] contains
  ?\ : contains  ( ca1 len1 ca2 len2 -- f )  search nip nip  ;
     \ Does the string _ca1 len1_ contains the string _ca2
     \ len2?_

: index-like  ( u1 u2 "name" -- )
  parse-name 2swap
  1+ swap ?do
    0 i line>string 2over contains if  i .index  then
    nuf? ?leave
  loop  2drop  ;

  \ doc{
  \
  \ index-like  ( u1 u2 "name" -- )
  \
  \ Print the first line of each block over the range from _u1_
  \ to _u2_, which conventionally contains a comment with a
  \ title, as long as the string "name" is included in the
  \ line. The string comparison is case-sensitive.
  \
  \ See: `index`, `index-ilike`.
  \
  \ }doc

( index-ilike )

need .index

[defined] contains
?\ : contains  ( ca1 len1 ca2 len2 -- f )  search nip nip  ;
   \ Does string _ca1 len1_ contain string _ca2 len2?_
   \
   \ XXX REMARK -- This word is defined in <002.need.fsb>,
   \ that's why conditional compilation is used here.

: index-ilike  ( u1 u2 "name" -- )
  parse-name save-string 2dup uppers
  2swap 1+ swap ?do
    save-string  0 i line>string save-string 2dup uppers
    2over contains if  i .index  then
    nuf? ?leave
  loop  2drop  ;

  \ doc{
  \
  \ index-ilike  ( u1 u2 "name" -- )
  \
  \ Print the first line of each block over the range from _u1_
  \ to _u2_, which conventionally contains a comment with a
  \ title, as long as the string "name" is included in the
  \ line. The string comparison is case-insensitive.
  \
  \ See: `index`, `index-like`.
  \
  \ }doc

  \ Note: The parsed string is re-saved to the circular string
  \ buffer in every iteration in order to prevent it from being
  \ overwritten by the strings of the index lines, because the
  \ circular string buffer is small.

  \ vim: filetype=soloforth
