  \ blocks.index-wordlist.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201611210200

  \ -----------------------------------------------------------
  \ Description

  \ Code common to `indexer` and `fly-indexer`.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ History

  \ 2016-11-19: Extracted from <blocks.indexer.fsb> in order to
  \ share the code with <blocks.fly-indexer.fsb>.
  \
  \ 2016-11-21: Add missing `need`.

( index-wordlist )

get-current forth-wordlist dup >order set-current

need str=  need alias  need nextname  need evaluate

wordlist constant index-wordlist

  \ doc{
  \
  \ index-wordlist  ( -- wid )
  \
  \ Word list for the indexed words.
  \
  \ }doc

: search-index  ( ca len -- 0 | xt 1 | xt -1 )
  index-wordlist search-wordlist  ;

  \ doc{
  \
  \ search-index  ( ca len -- 0 | xt 1 | xt -1 )
  \
  \ Search the index for word _ca len_.
  \
  \ }doc

: name-indexed?  ( ca len -- f )
  search-index 0<> dup if  nip  then  ;

  \ doc{
  \
  \ name-indexed?  ( ca len -- f )
  \
  \ Is word _ca len_ in the index?
  \
  \ }doc

variable indexed-block

  \ variable counter counter off  \ XXX INFORMER

: index-name  ( ca len -- )
  2dup name-indexed? if  2drop exit  then
  \ 1 counter +! counter ? 2dup type space hp@ u.
  \ XXX INFORMER
  nextname indexed-block @ alias  ;

  \ doc{
  \
  \ index-name  ( ca len -- )
  \
  \ Add word _ca len_ to the blocks index, if not done before.
  \
  \ The current word list must be `index-wordlist`.
  \
  \ }doc

: index-block-header  ( +n -- )
  dup indexed-block ! 0 swap line>string evaluate  ;  -->

  \ doc{
  \
  \ (index-block)  ( +n -- )
  \
  \ Index block _+n_, evaluating its header line.  The only
  \ word list in the search order must be `index-wordlist`.
  \
  \ This is a common factor of `(indexer)` (from the `indexer`
  \ tool) and `(index-block)` (from the `fly-indexer` tool).
  \
  \ See: `indexer`, `(indexer)`, `fly-indexer`,
  \ `(index-block)`.
  \
  \ }doc

( index-wordlist )

wordlist dup constant indexer-wordlist set-current
  \ Word list for the words that parse the block index lines.

: (  ( "ccc<space><paren><space|eof>" -- )
  begin  parse-name 2dup s" )" str= 0=
  while  index-name  repeat  2drop  ;
  \ Parse and index the names until the next right paren name.

indexer-wordlist >order  ' ( alias .(  previous

: \  ( "ccc<space><backslash><space|eof>" -- )
  begin  parse-name 2dup s" \" str= 0=
  while  index-name  repeat  2drop  ;
  \ Parse and index the names until the next backslash name.

previous set-current
  \ Restore the original search order.

  \ vim: filetype=soloforth
