  \ define.deferred.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201604172122

  \ -----------------------------------------------------------
  \ Description

  \ Words related to deferred words.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ Latest changes

  \ 2016-04-17: Added `deferred`, using the old definition of
  \ `alias`.

( deferred )

: deferred  ( xt "name" -- )  defer latest name> defer!  ;

  \ doc{
  \
  \ deferred  ( xt "name" -- )
  \
  \ Create a deferred word _name_ that will execute _xt_.  The
  \ effect is the same than `defer name  xt ' name defer!`.
  \
  \ }doc

( defers action-of )

  \ Credit:
  \
  \ Code adapted from the Afera library.

: defers  ( "name" -- )  ' defer@ compile,  ; immediate
  \ Compile the present contents of the deferred word "name"
  \ into the current definition. I.e. this produces static
  \ binding as if "name" was not deferred.
  \
  \ Origin: Gforth.

: action-of  ( Interpretation: "name" -- xt )
             ( Compilation:    "name" -- )
             ( Runtime:        -- xt )
  ' compiling? if    postpone literal postpone defer@
               else  defer@  then  ; immediate
  \ Return the code field address of a deferred word.
  \
  \ Origin: Forth-2012 (CORE EXT).

( <is> [is] is  )

  \ Credit:
  \
  \ Code adapted from the Afera library.

: <is>  ( xt "name" -- )  ' defer!  ;

: [is]  ( xt "name" -- )
  postpone ['] postpone defer!  ; immediate compile-only

: is  ( xt "name" -- )
  compiling? if  postpone [is]  else  <is>  then  ; immediate

( deferred? )

  \ XXX REMARK -- This word can not distinguish deferred words
  \ and aliases, which are created also by `defer`.

: deferred?  ( xt -- wf )  c@ $C3 =  ;
  \ Is _xt_ a deferred word?
  \ The code of a deferred word starts with a Z80 jump ($C3)
  \ to the word it's associated to.

  \ vim: filetype=soloforth
