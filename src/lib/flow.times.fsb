  \ flow.times.fsb
  \
  \ This file is part of Solo Forth
  \ http://programandala.net/en.program.solo_forth.html

  \ Last modified: 201604161626

  \ -----------------------------------------------------------
  \ Description

  \ `times`, a control flow structure which executes _n_ times
  \ the next word compiled.

  \ -----------------------------------------------------------
  \ Author

  \ Marcos Cruz (programandala.net), 2015, 2016.

  \ -----------------------------------------------------------
  \ Credit

  \ `times` was inspired by cmForth's `repeats`.

  \ -----------------------------------------------------------
  \ License

  \ You may do whatever you want with this work, so long as you
  \ retain every copyright, credit and authorship notice, and
  \ this license.  There is no warranty.

  \ -----------------------------------------------------------
  \ History

  \ 2015..2016: Several drafts, with different behaviours
  \ during compilation.
  \
  \ 2016-04-16: Finished. Simplest version. Documented.

( times )

variable times-xt  \ the _xt_ executed by `times`

: times  ( i*x n -- j*x )
  rp@ @  dup cell+ rp@ !  @ times-xt !
  0 ?do  times-xt perform  loop  ; compile-only

  \ doc{
  \
  \ times  ( i*x n -- j*x )
  \
  \ Repeat the next compiled instruction _n_ times.  If _n_ is
  \ zero, continue executing the following instruction.
  \
  \ `times` is useful to implement complicated math operations,
  \ like shifts, multiply, divide and square root, from
  \ appropriate math step instructions.  It is also useful in
  \ repeating auto-indexing memory instructions.
  \
  \ Usage example:
  \
  \ ----
  \ : blink  ( -- )  7 0 do  i border  loop  0 border  ;
  \ : blinking  ( -- )  100 times blink  ." Done" cr  ;
  \ ----
  \
  \ }doc

  \ vim: filetype=soloforth
