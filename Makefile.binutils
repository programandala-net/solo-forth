# Solo Forth included Makefile for GNU binutils

# Copyright (C) 2015 By Marcos Cruz (programandala.net)

# http://programandala.net/en.program.solo_forth.html

# Copying and distribution of this file, with or without modification, are
# permitted in any medium without royalty provided the copyright notice and
# this notice are preserved.  This file is offered as-is, without any warranty.

################################################################
# Requirements

# GNU binutils
#   http://gnu.org/software/binutils

# bin2code (by Metalbrain)
# 	http://metalbrain.speccy.org/link-eng.htm

################################################################
# Change history

# See at the end of the file.

################################################################
# Config

object_file = solo_forth.o

z80_dir=/usr/bin/
z80_prefix=z80-unknown-coff-
z80=$(z80_dir)$(z80_prefix)

as=$(z80)as
ld=$(z80)ld
nm=$(z80)nm

################################################################
# Main

.PHONY: symbols
symbols: solo_forth.symbols.binutils.abs.txt

################################################################
# The object file

$(object_file): $(kernel_source_file)
	$(as) \
		-z80 \
		-agls=solo_forth.list.txt \
		-L \
		-o $(object_file) \
		$(kernel_source_file)

# XXX OLD
#$(object_file): $(kernel_source_file) $(ld_script)

################################################################
# Binary file

# The filename "forth.bin" is used because bin2code does not
# have an option to choose the filename used in the TAP file
# header; it uses the name of the original file.

forth.bin: $(object_file)
	$(ld) \
		--trace \
		--oformat binary \
		-Map solo_forth.map \
		-Ttext=$(origin) \
		-Tdata=0xC000 \
		--output forth.bin \
		$(object_file)

# XXX with the script, the data section starts after the text section:
#		-T$(ld_script) \
# XXX same with this notation
#		--section-start=text=$(origin) \
#		--section-start=data=0xC000 \
# XXX this notation works!:
#		-Ttext=$(origin) \
#		-Tdata=0xC000 \

################################################################
# The TAP file

# solo_forth.bin.tap: forth.bin
# 	bin2code forth.bin solo_forth.bin.tap $(origin)

################################################################
# The symbols file

# The GNU binutils `as` assembler prints the symbols only with
# relative values, because they are not linke yet. But the `ld`
# linker does not have an option to print them.
#
# The chosen solution is to get a symbols list from the object
# file using the `nm` utility, also from GNU binutils. The
# values are relative, but the format of the listing makes the
# file directly interpretable by a Forth program...

solo_forth.symbols.binutils.rel.txt: $(object_file)
	$(nm) $(object_file) > solo_forth.symbols.binutils.rel.txt

solo_forth.symbols.binutils.abs.txt: solo_forth.symbols.binutils.rel.txt
	gforth \
		nm2absolute.fs \
		solo_forth.symbols.binutils.rel.txt \
		-e bye \
		| sort > solo_forth.symbols.binutils.abs.txt

solo_forth.symbols.txt: solo_forth.symbols.binutils.abs.txt
	ln -s solo_forth.symbols.binutils.abs.z80s solo_forth.symbols.txt

################################################################
# Change history

# 2015-08-20: Created with code from the main Makefile.
